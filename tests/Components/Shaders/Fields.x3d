<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta name='comment' content='World of Titania'/>
    <meta name='created' content='Sat, 26 Dec 2015 20:37:24 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Titania V1.2.2, http://titania.create3000.de'/>
    <meta name='modified' content='Sat, 02 Jan 2016 03:04:18 GMT'/>
  </head>
  <Scene>
    <WorldInfo>
      <MetadataSet DEF='Titania'
          name='Titania'
          reference='http://titania.create3000.de'>
        <MetadataSet DEF='NavigationInfo' containerField='value'
            name='NavigationInfo'
            reference='http://titania.create3000.de'>
          <MetadataString DEF='type' containerField='value'
              name='type'
              reference='http://titania.create3000.de'
              value='"EXAMINE"'/>
        </MetadataSet>
        <MetadataSet DEF='Viewpoint' containerField='value'
            name='Viewpoint'
            reference='http://titania.create3000.de'>
          <MetadataDouble DEF='position' containerField='value'
              name='position'
              reference='http://titania.create3000.de'
              value='0, 0, 10'/>
          <MetadataDouble DEF='orientation' containerField='value'
              name='orientation'
              reference='http://titania.create3000.de'
              value='0, 0, 1, 0'/>
          <MetadataDouble DEF='centerOfRotation' containerField='value'
              name='centerOfRotation'
              reference='http://titania.create3000.de'
              value='0, 0, 0'/>
        </MetadataSet>
      </MetadataSet>
    </WorldInfo>
    <Transform DEF='Sphere'>
      <Shape>
        <Appearance>
          <ComposedShader DEF='CobwebShader'
              language='GLSL'>
            <field accessType='initializeOnly' type='SFBool' name='sfbool'/>
            <field accessType='initializeOnly' type='SFColor' name='sfcolor'/>
            <field accessType='initializeOnly' type='SFColorRGBA' name='sfcolorrgba'/>
            <field accessType='initializeOnly' type='SFDouble' name='sfdouble'/>
            <field accessType='initializeOnly' type='SFFloat' name='sffloat'/>
            <field accessType='initializeOnly' type='SFImage' name='sfimage' value='3 5 2 0xffff 0xffff 0xffff 0 0 0xffff 0xffff 0xffff 0xffff 0 0 0xffff 0xffff 0xffff 0xffff'/>
            <field accessType='initializeOnly' type='SFInt32' name='sfint32'/>
            <field accessType='initializeOnly' type='SFMatrix3d' name='sfmatrix3d'/>
            <field accessType='initializeOnly' type='SFMatrix3f' name='sfmatrix3f'/>
            <field accessType='initializeOnly' type='SFMatrix4d' name='sfmatrix4d'/>
            <field accessType='initializeOnly' type='SFMatrix4f' name='sfmatrix4f'/>
            <field accessType='initializeOnly' type='SFNode' name='sfnode'>
              <ImageTexture DEF='_1'
                  url='"../images/ubuntu.png"'/>
            </field>
            <field accessType='initializeOnly' type='SFRotation' name='sfrotation'/>
            <field accessType='initializeOnly' type='SFString' name='sfstring'/>
            <field accessType='initializeOnly' type='SFTime' name='sftime'/>
            <field accessType='initializeOnly' type='SFVec2d' name='sfvec2d'/>
            <field accessType='initializeOnly' type='SFVec2f' name='sfvec2f'/>
            <field accessType='initializeOnly' type='SFVec3d' name='sfvec3d'/>
            <field accessType='initializeOnly' type='SFVec3f' name='sfvec3f'/>
            <field accessType='initializeOnly' type='SFVec4d' name='sfvec4d'/>
            <field accessType='initializeOnly' type='SFVec4f' name='sfvec4f'/>
            <field accessType='initializeOnly' type='MFBool' name='mfbool'/>
            <field accessType='initializeOnly' type='MFColor' name='mfcolor'/>
            <field accessType='initializeOnly' type='MFColorRGBA' name='mfcolorrgba'/>
            <field accessType='initializeOnly' type='MFDouble' name='mfdouble'/>
            <field accessType='initializeOnly' type='MFFloat' name='mffloat'/>
            <field accessType='initializeOnly' type='MFImage' name='mfimage' value='3 5 2 0xffff 0xffff 0xffff 0 0 0xffff 0xffff 0xffff 0xffff 0 0 0xffff 0xffff 0xffff 0xffff'/>
            <field accessType='initializeOnly' type='MFInt32' name='mfint32'/>
            <field accessType='initializeOnly' type='MFMatrix3d' name='mfmatrix3d'/>
            <field accessType='initializeOnly' type='MFMatrix3f' name='mfmatrix3f'/>
            <field accessType='initializeOnly' type='MFMatrix4d' name='mfmatrix4d'/>
            <field accessType='initializeOnly' type='MFMatrix4f' name='mfmatrix4f'/>
            <field accessType='initializeOnly' type='MFNode' name='mfnode'>
              <ImageTexture USE='_1'/>
            </field>
            <field accessType='initializeOnly' type='MFRotation' name='mfrotation'/>
            <field accessType='initializeOnly' type='MFString' name='mfstring'/>
            <field accessType='initializeOnly' type='MFTime' name='mftime'/>
            <field accessType='initializeOnly' type='MFVec2d' name='mfvec2d'/>
            <field accessType='initializeOnly' type='MFVec2f' name='mfvec2f'/>
            <field accessType='initializeOnly' type='MFVec3d' name='mfvec3d'/>
            <field accessType='initializeOnly' type='MFVec3f' name='mfvec3f'/>
            <field accessType='initializeOnly' type='MFVec4d' name='mfvec4d'/>
            <field accessType='initializeOnly' type='MFVec4f' name='mfvec4f'/>
            <ShaderPart DEF='CobweVertex'>
<![CDATA[data:text/plain,

precision mediump float;

uniform mat4 x3d_ProjectionMatrix;
uniform mat4 x3d_ModelViewMatrix;

attribute vec4 x3d_TexCoord;
attribute vec4 x3d_Vertex;

varying vec4 texCoord;

void
main ()
{
	gl_Position = x3d_ProjectionMatrix * x3d_ModelViewMatrix * x3d_Vertex;

	texCoord = x3d_TexCoord;
}]]> 
            </ShaderPart>
            <ShaderPart DEF='CobwebFragment'
                type='FRAGMENT'>
<![CDATA[data:text/plain,

precision mediump float;

uniform int       sfbool;
uniform vec3      sfcolor;
uniform vec4      sfcolorrgba;
uniform float     sfdouble;
uniform float     sffloat;
uniform int       sfimage [18];
uniform int       sfint32;
uniform mat3      sfmatrix3d;
uniform mat3      sfmatrix3f;
uniform mat4      sfmatrix4d;
uniform mat4      sfmatrix4f;
uniform sampler2D sfnode;
uniform vec4      sfrotation;
uniform float     sftime;
uniform vec2      sfvec2d;
uniform vec2      sfvec2f;
uniform vec3      sfvec3d;
uniform vec3      sfvec3f;
uniform vec4      sfvec4d;
uniform vec4      sfvec4f;
uniform int       mfbool [2];
uniform vec3      mfcolor [2];
uniform vec4      mfcolorrgba [2];
uniform float     mfdouble [2];
uniform float     mffloat [2];
uniform int       mfimage [36];
uniform int       mfint32 [2];
uniform mat3      mfmatrix3d [2];
uniform mat3      mfmatrix3f [2];
uniform mat4      mfmatrix4d [2];
uniform mat4      mfmatrix4f [2];
uniform sampler2D mfnode [2];
uniform vec4      mfrotation [2];
uniform vec4      mfstring [2];
uniform float     mftime [2];
uniform vec2      mfvec2d [2];
uniform vec2      mfvec2f [2];
uniform vec3      mfvec3d [2];
uniform vec3      mfvec3f [2];
uniform vec4      mfvec4d [2];
uniform vec4      mfvec4f [2];






varying vec4 texCoord;

void
main ()
{
	float x = 0.0;

	x += float (sfbool);
	x += sfcolor .r;
	x += sfcolorrgba .r;
	x += sfdouble;
	x += sffloat;
	x += float (sfimage [0]);
	x += float (sfint32);
	x += sfmatrix3d [0] .x;
	x += sfmatrix3f [0] .x;
	x += sfmatrix4d [0] .x;
	x += sfmatrix4f [0] .x;
	x += texture2D (sfnode, vec2 (0, 0)) .r;
	x += sfrotation [0];
	x += sftime;
	x += sfvec2d [0];
	x += sfvec2f [0];
	x += sfvec3d [0];
	x += sfvec3f [0];
	x += sfvec4d [0];
	x += sfvec4f [0];
	x += float (mfbool [0]);
	x += mfcolor [0] .r;
	x += mfcolorrgba [0] .r;
	x += mfdouble [0];
	x += mffloat [0];
	x += float (mfimage [0]);
	x += float (mfint32 [0]);
	x += mfmatrix3d [0] [0] .x;
	x += mfmatrix3f [0] [0] .x;
	x += mfmatrix4d [0] [0] .x;
	x += mfmatrix4f [0] [0] .x;
	x += texture2D (mfnode [0], vec2 (0, 0)) .r;
	x += mfrotation [0] [0];
	x += mftime [0];
	x += mfvec2d [0] [0];
	x += mfvec2f [0] [0];
	x += mfvec3d [0] [0];
	x += mfvec3f [0] [0];
	x += mfvec4d [0] [0];
	x += mfvec4f [0] [0];


	x *= 0.00001;



	vec3 color   = vec3 (texture2D (mfnode [0], texCoord .st));
	gl_FragColor = vec4 (color, 1.0 + x);
}
]]> 
            </ShaderPart>
          </ComposedShader>
        </Appearance>
        <Sphere/>
      </Shape>
    </Transform>
  </Scene>
</X3D>
