<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <unit category='angle' name='degree' conversionFactor='0.0174532925199432958'/>
    <meta name='comment' content='World of Titania'/>
    <meta name='created' content='Thu, 06 Oct 2016 10:49:59 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Titania V2.0.1, http://titania.create3000.de'/>
    <meta name='identifier' content='file:///home/holger/Projekte/Cobweb/cobweb.js/tests/Components/PointingDeviceSensor/ClonedSensors.x3d'/>
    <meta name='modified' content='Thu, 06 Oct 2016 16:56:51 GMT'/>
  </head>
  <Scene>
    <ProtoDeclare name='Grid'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFVec3f' name='translation'/>
        <field accessType='inputOutput' type='SFRotation' name='rotation'/>
        <field accessType='inputOutput' type='SFVec3f' name='scale' value='1 1 1'/>
        <field accessType='inputOutput' type='MFInt32' name='dimension' value='10, 10, 10'/>
        <field accessType='inputOutput' type='MFInt32' name='majorLineEvery' value='5, 5, 5'/>
        <field accessType='inputOutput' type='MFInt32' name='majorLineOffset' value='0, 0, 0'/>
        <field accessType='inputOutput' type='SFColor' name='color' value='0.5 0.5 0.5'/>
        <field accessType='inputOutput' type='SFFloat' name='transparency' value='0.61803'/>
        <field accessType='inputOutput' type='SFColor' name='lineColor' value='1 0.7 0.7'/>
        <field accessType='inputOutput' type='SFFloat' name='lineTransparency' value='0.8'/>
        <field accessType='inputOutput' type='SFColor' name='majorLineColor' value='1 0.7 0.7'/>
        <field accessType='inputOutput' type='SFFloat' name='majorLineTransparency' value='0.6'/>
        <field accessType='initializeOnly' type='SFBool' name='solid' value='true'/>
      </ProtoInterface>
      <ProtoBody>
        <Transform>
          <IS>
            <connect nodeField='translation' protoField='translation'/>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
          </IS>
          <Transform DEF='Plane'
              rotation='-3.09087122910219e-08 0.70710528118436 0.707108281185553 3.14159'
              scale='10 10 1'>
            <Shape>
              <Appearance>
                <Material DEF='Material2'
                    diffuseColor='0 0 0'>
                  <IS>
                    <connect nodeField='emissiveColor' protoField='color'/>
                    <connect nodeField='transparency' protoField='transparency'/>
                  </IS>
                </Material>
              </Appearance>
              <Rectangle2D
                  size='1 1'>
                <IS>
                  <connect nodeField='solid' protoField='solid'/>
                </IS>
              </Rectangle2D>
            </Shape>
          </Transform>
          <Shape DEF='MajorGrid'>
            <Appearance>
              <Material DEF='MajorMaterial'>
                <IS>
                  <connect nodeField='emissiveColor' protoField='majorLineColor'/>
                  <connect nodeField='transparency' protoField='majorLineTransparency'/>
                </IS>
              </Material>
            </Appearance>
            <IndexedLineSet DEF='MajorGrid_1'
                coordIndex='0, 1, -1, 2, 3, -1, 4, 5, -1, 6, 7, -1, 8, 9, -1, 10, 11, -1'>
              <Coordinate
                  point='-5 0 -5.25, -5 0 5.25, 0 0 -5.25, 0 0 5.25, 5 0 -5.25, 5 0 5.25, -5.25 0 -5, 5.25 0 -5, -5.25 0 0, 5.25 0 0, -5.25 0 5, 5.25 0 5'/>
            </IndexedLineSet>
          </Shape>
          <Shape DEF='MinorGrid'>
            <Appearance>
              <Material DEF='MinorMaterial'>
                <IS>
                  <connect nodeField='emissiveColor' protoField='lineColor'/>
                  <connect nodeField='transparency' protoField='lineTransparency'/>
                </IS>
              </Material>
            </Appearance>
            <IndexedLineSet DEF='MinorGrid_1'
                coordIndex='0, 1, -1, 2, 3, -1, 4, 5, -1, 6, 7, -1, 8, 9, -1, 10, 11, -1, 12, 13, -1, 14, 15, -1, 16, 17, -1, 18, 19, -1, 20, 21, -1, 22, 23, -1, 24, 25, -1, 26, 27, -1, 28, 29, -1, 30, 31, -1'>
              <Coordinate
                  point='-4 0 -5, -4 0 5, -3 0 -5, -3 0 5, -2 0 -5, -2 0 5, -1 0 -5, -1 0 5, 1 0 -5, 1 0 5, 2 0 -5, 2 0 5, 3 0 -5, 3 0 5, 4 0 -5, 4 0 5, -5 0 -4, 5 0 -4, -5 0 -3, 5 0 -3, -5 0 -2, 5 0 -2, -5 0 -1, 5 0 -1, -5 0 1, 5 0 1, -5 0 2, 5 0 2, -5 0 3, 5 0 3, -5 0 4, 5 0 4'/>
            </IndexedLineSet>
          </Shape>
          <Shape DEF='MajorPoints'>
            <Appearance>
              <LineProperties
                  linewidthScaleFactor='6'/>
              <Material USE='MajorMaterial'/>
            </Appearance>
            <PointSet DEF='MajorPoints_1'>
              <Coordinate
                  point='0 -5 0, 0 0 0, 0 5 0'/>
            </PointSet>
          </Shape>
          <Shape DEF='MinorPoints'>
            <Appearance>
              <LineProperties
                  linewidthScaleFactor='4'/>
              <Material USE='MinorMaterial'/>
            </Appearance>
            <PointSet DEF='MinorPoints_1'>
              <Coordinate
                  point='0 -4 0, 0 -3 0, 0 -2 0, 0 -1 0, 0 1 0, 0 2 0, 0 3 0, 0 4 0'/>
            </PointSet>
          </Shape>
        </Transform>
        <Script DEF='GridScript'
            directOutput='true'
            mustEvaluate='true'>
          <field accessType='inputOutput' type='MFInt32' name='dimension'/>
          <field accessType='inputOutput' type='MFInt32' name='majorLineEvery'/>
          <field accessType='inputOutput' type='MFInt32' name='majorLineOffset'/>
          <field accessType='initializeOnly' type='SFNode' name='plane'>
            <Transform USE='Plane'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='majorGrid'>
            <IndexedLineSet USE='MajorGrid_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='minorGrid'>
            <IndexedLineSet USE='MinorGrid_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='majorPoints'>
            <PointSet USE='MajorPoints_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='minorPoints'>
            <PointSet USE='MinorPoints_1'/>
          </field>
          <IS>
            <connect nodeField='dimension' protoField='dimension'/>
            <connect nodeField='majorLineEvery' protoField='majorLineEvery'/>
            <connect nodeField='majorLineOffset' protoField='majorLineOffset'/>
          </IS>
<![CDATA[javascript:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	// Plane

	plane .scale = new SFVec3f (dimension [0], dimension [2], 1);

	// Grid

	generateGrid (true, majorGrid);
	generateGrid (false, minorGrid);

	// Points

	generatePoints (true,  majorPoints .coord .point);
	generatePoints (false, minorPoints .coord .point);
}

function generateGrid (major, grid)
{
	var point       = grid .coord .point;
	var coordIndex  = new MFInt32 ();
	var scaleX1_2   = dimension [0] / 2;
	var scaleZ1_2   = dimension [2] / 2;
	var majorAdd    = major / 4;
	var p           = 0;

	for (var i = 0, size = dimension [0] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 0))
			continue;

		var x = -scaleX1_2 + i;

		point [p]     = new SFVec3f (x, 0, -scaleZ1_2 - majorAdd);
		point [p + 1] = new SFVec3f (x, 0,  scaleZ1_2 + majorAdd);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
			
		p += 2;
	}

	for (var i = 0, size = dimension [2] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 2))
			continue;

		var z = -scaleZ1_2 + i;

		point [p]     = new SFVec3f (-scaleX1_2 - majorAdd, 0, z);
		point [p + 1] = new SFVec3f ( scaleX1_2 + majorAdd, 0, z);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
		
		p += 2;
	}

	point .length = p;

	grid .set_coordIndex = coordIndex;
}

function generatePoints (major, point)
{
	var scaleY1_2 = -dimension [1] / 2;
	var p         = 0;

	for (var i = 0, size = dimension [1] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 1))
			continue;

		point [p] = new SFVec3f (0, scaleY1_2 + i, 0);
		++ p;
	}

	point .length = p;
}

function isMajorLine (i, index)
{
	for (var d = index; d < majorLineEvery .length; d += 3)
	{
		if (isMajor (i, dimension [index], majorLineEvery [d], majorLineOffset [d]))
			return true;
	}

	return false;
}

function isMajor (i, dimension, majorLineEvery, majorLineOffset)
{
	if (majorLineEvery)
	{
		var index = Math .floor (i - dimension / 2 - majorLineOffset);

		return !(index % majorLineEvery);
	}

	return false;
}
]]> 
        </Script>
      </ProtoBody>
    </ProtoDeclare>
    <WorldInfo>
      <MetadataSet DEF='Titania'
          name='Titania'
          reference='http://titania.create3000.de'>
        <MetadataSet DEF='AngleGrid' containerField='value'
            name='AngleGrid'
            reference='http://titania.create3000.de'>
          <MetadataBoolean DEF='enabled' containerField='value'
              name='enabled'
              reference='http://titania.create3000.de'
              value='false'/>
        </MetadataSet>
        <MetadataSet DEF='Grid' containerField='value'
            name='Grid'
            reference='http://titania.create3000.de'>
          <MetadataBoolean DEF='enabled_1' containerField='value'
              name='enabled'
              reference='http://titania.create3000.de'
              value='false'/>
          <MetadataFloat DEF='rotation' containerField='value'
              name='rotation'
              reference='http://titania.create3000.de'
              value='1, 0, 0, 1.5708'/>
        </MetadataSet>
        <MetadataSet DEF='NavigationInfo' containerField='value'
            name='NavigationInfo'
            reference='http://titania.create3000.de'>
          <MetadataString DEF='type' containerField='value'
              name='type'
              reference='http://titania.create3000.de'
              value='"EXAMINE"'/>
        </MetadataSet>
        <MetadataSet DEF='Viewpoint' containerField='value'
            name='Viewpoint'
            reference='http://titania.create3000.de'>
          <MetadataDouble DEF='position' containerField='value'
              name='position'
              reference='http://titania.create3000.de'
              value='0, 0, 10'/>
          <MetadataDouble DEF='orientation' containerField='value'
              name='orientation'
              reference='http://titania.create3000.de'
              value='0, 0, 1, 0'/>
          <MetadataDouble DEF='centerOfRotation' containerField='value'
              name='centerOfRotation'
              reference='http://titania.create3000.de'
              value='0, 0, 0'/>
        </MetadataSet>
        <MetadataSet DEF='Selection' containerField='value'
            name='Selection'
            reference='http://titania.create3000.de'>
          <MetadataSet DEF='previous' containerField='value'
              name='previous'
              reference='http://titania.create3000.de'/>
          <MetadataSet DEF='children' containerField='value'
              name='children'
              reference='http://titania.create3000.de'>
            <Viewpoint DEF='_1' containerField='value'
                description='Home'/>
          </MetadataSet>
        </MetadataSet>
      </MetadataSet>
    </WorldInfo>
    <Viewpoint USE='_1'/>
    <ProtoInstance name='Grid'>
      <fieldValue name='rotation' value='1 0 0 1.5707963267949'/>
      <fieldValue name='transparency' value='0.8'/>
    </ProtoInstance>
    <Transform DEF='Clone1'
        translation='-2 0 0'>
      <Transform DEF='SimpleSlider'>
        <Transform DEF='Cone'
            scale='0.374845 0.374845 0.374845'>
          <Shape>
            <Appearance>
              <Material/>
            </Appearance>
            <Cone/>
          </Shape>
        </Transform>
        <PlaneSensor DEF='_2'
            maxPosition='0 2'/>
      </Transform>
    </Transform>
    <Transform DEF='Clone2'
        translation='2 0 0'
        rotation='-3.57398802300153e-17 1.10915152794688e-16 1 3.14159265358979'
        scaleOrientation='-0.357406744336593 0.862856209461017 -0.357406744336593 4.51948301921753'>
      <Transform USE='SimpleSlider'/>
    </Transform>
    <Transform DEF='Clone3'
        translation='0 -3 6.66134e-16'
        rotation='1.72022019207585e-06 1.72022019207586e-06 -0.999999999997041 1.57079632679786'
        scaleOrientation='0.543313393239255 -0.839529958577022 -7.33383290662978e-05 2.27202398211324e-06'>
      <Transform USE='SimpleSlider'/>
    </Transform>
    <ROUTE fromNode='_2' fromField='translation_changed' toNode='Cone' toField='set_translation'/>
  </Scene>
</X3D>
